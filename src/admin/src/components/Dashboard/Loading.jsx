import React, { Component } from 'react';
import anime from "animejs";

class Loading extends Component {
    constructor(props) {
        super(props);
        this.state = {
            loopCompleted: 0
        }

        this.timeline = anime.timeline({
            easing: 'easeInOutSine',
            duration: 100,
            direction: 'alternate',
            loop: true,
            loopComplete: anim => {
                this.setState({ loopCompleted: this.state.loopCompleted + 1 })

                if (this.state.loopCompleted === 2) return this.props.timelineClosed() & anim.pause();
                if (!this.props.play) anim.pause();
            }
        });
    }

    componentDidMount() {
        this.timeline
            .add({
                targets: "#sign_L path",
                strokeDashoffset: [anime.setDashoffset, 0],
            })
            .add({
                targets: "#sign_B path",
                strokeDashoffset: [anime.setDashoffset, 0],
            })
            .add({
                targets: "#sign_S path",
                strokeDashoffset: [anime.setDashoffset, 0],
            })

    }

    render() {

        if (this.props.play && this.state.loopCompleted) {
            this.timeline.play();
        }

        const color = this.props.theme === "dark" ? "white" : "black"

        return (
            <div className="lbs-loading" style={styling}>
                <svg id="sign_L" width="139" height="211" viewBox="0 0 139 211" fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M136.547 174.109V172.609H135.047H46.9688V3.25V1.75H45.4688H3.28125H1.78125V3.25V208V209.5H3.28125H135.047H136.547V208V174.109Z"
                        stroke={color} strokeWidth="3" />
                </svg>
                <svg id="sign_B" width="159" height="211" viewBox="0 0 159 211" fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M1.78125 208V209.5H3.28125L82.875 209.5L82.8871 209.5C106.33 209.311 124.615 204.112 137.535 193.699C150.529 183.227 156.938 167.843 156.938 147.812C156.938 136.005 153.812 125.922 147.491 117.655C142.067 110.453 134.872 105.37 125.965 102.396C133.591 98.74 139.716 93.5359 144.303 86.7801L144.308 86.7731C149.644 78.8176 152.297 69.6621 152.297 59.3594C152.297 40.5916 145.711 26.1853 132.424 16.3883C119.214 6.5544 99.9977 1.75 75 1.75H3.28125H1.78125V3.25V208ZM99.5365 44.7968L99.5481 44.8057L99.5598 44.8143C104.485 48.4661 107.109 54.5823 107.109 63.5781C107.109 71.5292 104.579 77.3189 99.6938 81.2139C94.7438 85.1608 87.1523 87.3449 76.6744 87.5312H46.9688V38.9219H75C86.5089 38.9219 94.5861 40.9754 99.5365 44.7968ZM81.6094 172.609H46.9688V120.344H84.1299C93.607 120.483 100.446 122.873 104.922 127.262C109.391 131.645 111.75 138.262 111.75 147.391C111.75 155.358 109.085 161.478 103.841 165.935C98.6666 170.319 91.3221 172.609 81.6094 172.609Z"
                        stroke={color} strokeWidth="3" />
                </svg>

                <svg id="sign_S" width="164" height="217" viewBox="0 0 164 217" fill="none"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M109.103 140.19L109.109 140.195L109.116 140.2C114.309 144.095 116.953 149.713 116.953 157.281C116.953 164.14 114.349 169.397 109.135 173.223C103.856 177.003 96.3797 178.984 86.5312 178.984C73.2038 178.984 63.4876 176.191 57.1189 170.861C50.8014 165.575 47.5312 157.582 47.5312 146.594V145.094H46.0312H3.70312H2.20312V146.594C2.20312 160.082 5.65157 172.004 12.5836 182.306L12.589 182.314C19.6133 192.61 29.7384 200.696 42.8853 206.603L42.8936 206.606C56.0427 212.419 70.5962 215.312 86.5312 215.312C109.429 215.312 127.827 210.25 141.571 199.967L141.576 199.963C155.381 189.537 162.281 175.159 162.281 157C162.281 140.676 156.646 126.971 145.375 115.988C134.157 105.058 116.408 96.0157 92.3071 88.7667C79.3384 84.848 69.6104 80.6815 63.0387 76.3011C56.7005 72.0146 53.7188 66.8618 53.7188 60.8125C53.7188 54.1612 56.3548 48.8847 61.7 44.8539L61.7062 44.8492L61.7124 44.8445C67.0772 40.7109 74.7246 38.5469 84.8438 38.5469C95.2947 38.5469 103.19 41.1119 108.738 46.043L108.738 46.043L108.748 46.0518C114.264 50.8674 117.094 57.684 117.094 66.7188V68.2188H118.594H160.781H162.281V66.7188C162.281 54.1644 159.019 42.9061 152.473 32.9903C146.024 23.0779 136.938 15.4483 125.271 10.0922C113.607 4.64324 100.355 1.9375 85.5469 1.9375C70.8463 1.9375 57.5216 4.40389 45.5957 9.36505L45.5918 9.36671C33.7566 14.3299 24.5645 21.2844 18.0954 30.2638L18.0937 30.2663C11.7153 39.1574 8.53125 49.3098 8.53125 60.6719C8.53125 82.6456 20.597 100.008 44.1932 112.757L44.1951 112.758C52.8365 117.411 64.508 122.131 79.1745 126.926L79.1828 126.928C93.7898 131.61 103.699 136.047 109.103 140.19Z"
                        stroke={color} strokeWidth="3" />
                </svg>



            </div>
        );
    }
}


const styling = {
    position: "fixed",
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)",
}

export default Loading;